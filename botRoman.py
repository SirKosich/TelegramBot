import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
import requests

bot = telebot.TeleBot('8010183493:AAF0H8AMCSYIwKjaNVP9DFtynJU5vZcL8HQ')


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def get_main_menu():
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton(text="–°–æ–±–∞—á–∫–∏", callback_data="sob"))
    keyboard.add(InlineKeyboardButton(text="–ö–æ—Ç–∏–∫–∏", callback_data="kot"))
    keyboard.add(InlineKeyboardButton(text="–•–æ–º—è–∫–∏", callback_data="ham"))
    keyboard.add(InlineKeyboardButton(text="–û–±–æ –º–Ω–µ", callback_data="about"))
    keyboard.add(InlineKeyboardButton(text="–û Wisp", callback_data="wisp"))
    keyboard.add(InlineKeyboardButton(text="–ü—Ä–µ–¥–º–µ—Ç—ã", callback_data="items"))
    return keyboard


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤
def get_items_menu():
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton(text="–î–∞—ç–¥–∞–ª—É—Å", callback_data="daedalus"))
    keyboard.add(InlineKeyboardButton(text="–°–∞—Ç–∞–Ω–∏–∫", callback_data="satanic"))
    keyboard.add(InlineKeyboardButton(text="–¢–∞—Ä–∞—Å–∫–∞", callback_data="tarrasque"))
    keyboard.add(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_main"))
    return keyboard


def get_wisp_menu():
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton(text="–õ–æ—Ä Wisp", callback_data="lor_wisp"))
    keyboard.add(InlineKeyboardButton(text="–ö—Ç–æ —Ç–∞–∫–∏–µ –ü—Ä–µ–¥–≤–µ—á–Ω—ã–µ", callback_data="predv"))
    keyboard.add(InlineKeyboardButton(text="–ö—Ç–æ —Ç–∞–∫–æ–π Puck", callback_data="puck"))
    keyboard.add(InlineKeyboardButton(text="–ö—Ç–æ —Ç–∞–∫–æ–π Elder Titan", callback_data="elder"))
    keyboard.add(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_main"))
    return keyboard


def get_animal_menu(animal_type):
    keyboard = InlineKeyboardMarkup()
    if animal_type == "ham":
        keyboard.add(InlineKeyboardButton(text="–•–æ–º—è–∫", callback_data="hamst"))
    elif animal_type == "sob":
        keyboard.add(InlineKeyboardButton(text="–°–æ–±–∞—á–∫–∞", callback_data="sobachka"))
        keyboard.add(InlineKeyboardButton(text="–°–ª—É—á–∞–π–Ω–∞—è —Å–æ–±–∞—á–∫–∞", callback_data="sobaka"))
    elif animal_type == "kot":
        keyboard.add(InlineKeyboardButton(text="–ö–æ—Ç–∏–∫", callback_data="kotek"))
        keyboard.add(InlineKeyboardButton(text="–°–ª—É—á–∞–π–Ω—ã–π –∫–æ—Ç–∏–∫", callback_data="kotik"))
    keyboard.add(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_main"))
    return keyboard


# –•—ç–Ω–¥–ª–µ—Ä—ã
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:",
        reply_markup=get_main_menu()
    )


@bot.callback_query_handler(func=lambda call: True)
def handle_query(call):
    try:
        bot.delete_message(call.message.chat.id, call.message.message_id)

        if call.data == "back_to_main":
            bot.send_message(call.message.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!", reply_markup=get_main_menu())

        elif call.data == "about":
            bot.send_message(call.message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –†–æ–º–∞–Ω, –º–Ω–µ 14 –ª–µ—Ç. –ú–æ—è –ª—é–±–∏–º–∞—è –∏–≥—Ä–∞ ‚Äî Dota 2, –∏ —è –æ–±–æ–∂–∞—é Wisp!")

        elif call.data in ["sob", "kot", "ham"]:
            bot.send_message(call.message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ {call.data}:", reply_markup=get_animal_menu(call.data))

        elif call.data == "kotik":
            response = requests.get("https://api.thecatapi.com/v1/images/search")
            if response.status_code == 200:
                data = response.json()
                bot.send_photo(call.message.chat.id, data[0]["url"])
            else:
                bot.send_message(call.message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ—Ç–∏–∫–∞ üê±")

        elif call.data == "sobaka":
            response = requests.get("https://dog.ceo/api/breeds/image/random")
            if response.status_code == 200:
                data = response.json()
                bot.send_photo(call.message.chat.id, data["message"])
            else:
                bot.send_message(call.message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–±–∞—á–∫—É üê∂")

        elif call.data == "hamst":
            bot.send_animation(
                call.message.chat.id,
                "https://media.tenor.com/9RCIDZjkhBsAAAAM/hamster-meme.gif"
            )

        elif call.data == "items":
            bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:", reply_markup=get_items_menu())

        elif call.data == "wisp":
            bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_wisp_menu())

        # –õ–æ—Ä, –ø—Ä–µ–¥–º–µ—Ç—ã, –∏ –¥—Ä—É–≥–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
        elif call.data in ["daedalus", "satanic", "tarrasque", "lor_wisp", "predv", "puck", "elder"]:
            descriptions = {
                "daedalus": "–î–∞—ç–¥–∞–ª—É—Å ‚Äî –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç...",
                "satanic": "–°–∞—Ç–∞–Ω–∏–∫ ‚Äî –≤–æ–ø–ª–æ—â–µ–Ω–∏–µ —Ç—ë–º–Ω–æ–π –º–∞–≥–∏–∏...",
                "tarrasque": "–¢–∞—Ä–∞—Å–∫–∞ ‚Äî —Å–∏–º–≤–æ–ª —Å—Ç–æ–π–∫–æ—Å—Ç–∏...",
                "lor_wisp": "Wisp ‚Äî —ç—Ç–æ —Å—É—â–Ω–æ—Å—Ç—å –≤—Å–µ–ª–µ–Ω–Ω–æ–π...",
                "predv": "–ü—Ä–µ–¥–≤–µ—á–Ω—ã–µ ‚Äî –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏...",
                "puck": "Puck ‚Äî –≤–æ–ª—à–µ–±–Ω—ã–π –¥—Ä–∞–∫–æ–Ω—á–∏–∫...",
                "elder": "Elder Titan ‚Äî —Å–æ–∑–¥–∞—Ç–µ–ª—å –≤—Å–µ–ª–µ–Ω–Ω–æ–π..."
            }
            bot.send_message(call.message.chat.id, descriptions[call.data])

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        bot.send_message(call.message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

bot.polling(none_stop=True)
